import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,c as d,b as t,w as n,a,e as s,d as i,o as m}from"./app-ydblb6sM.js";const u={},v=i(`<h1 id="开始入门" tabindex="-1"><a class="header-anchor" href="#开始入门"><span>开始入门</span></a></h1><p>翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。</p><p>您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件； 所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。 此面板不作为运行服务器的拖放服务存在。 这是一个高度复杂的系统，需要多个依赖项，并且使用搭建他的网站管理人员需要付出一些时间学习如何使用它。<strong>如果您希望能够在不了解基本 linux 系统管理的情况下安装它，您现在应该停下来然后出门左拐。</strong></p><div class="hint-container tip"><p class="hint-container-title">想要更简单的设置？</p><p><a href="https://wisp.gg" target="_blank" rel="noopener noreferrer">WISP</a> 是一款由翼龙驱动的 SaaS，适合企业和个人使用。提供所有功能，无需设置麻烦，并与翼龙预设完全兼容。与 MultiCraft 或 TCAdmin 相媲美，同时提供新的和独特的功能。单击此处 <a href="https://wisp.gg/features" target="_blank" rel="noopener noreferrer">了解更多</a>。</p></div><h2 id="选择服务器操作系统" tabindex="-1"><a class="header-anchor" href="#选择服务器操作系统"><span>选择服务器操作系统</span></a></h2><p>翼龙可在多种操作系统上运行，因此请选择最适合您使用的操作系统。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Pterodactyl 不支持大多数 OpenVZ 系统，因为它与 Docker 不兼容。如果你计划在基于 OpenVZ 的系统上运行这个软件，你很可能不会成功。</p></div><table><thead><tr><th>操作系统</th><th>版本</th><th style="text-align:center;">支持状况</th><th>注意事项</th></tr></thead><tbody><tr><td><strong>Ubuntu</strong></td><td>20.04</td><td style="text-align:center;">✅</td><td>文档以 Ubuntu 20.04 操作系统为基本所编写的。</td></tr><tr><td></td><td>22.04</td><td style="text-align:center;">✅</td><td>MariaDB 无需 repo 安装脚本即可安装。</td></tr><tr><td><strong>CentOS</strong></td><td>7</td><td style="text-align:center;">✅</td><td>需要额外的 repos。</td></tr><tr><td></td><td>8</td><td style="text-align:center;">✅</td><td>注意，CentOS 8 已停运。使用 Rocky 或 Alma Linux。</td></tr><tr><td><strong>Debian</strong></td><td>11</td><td style="text-align:center;">✅</td><td></td></tr><tr><td></td><td>12</td><td style="text-align:center;">✅</td><td></td></tr></tbody></table><h2 id="依赖项" tabindex="-1"><a class="header-anchor" href="#依赖项"><span>依赖项</span></a></h2><ul><li>PHP <code>8.0</code> 或 <code>8.1</code>（推荐），带有以下扩展名：<code>cli</code>、<code>openssl</code>、<code>gd</code>、<code>mysql</code>、<code>PDO</code>、<code>mbstring</code> <code>tokenizer</code>、<code>bcmath </code>、<code>xml</code> 或 <code>dom</code>、<code>curl</code>、<code>zip</code> 和 <code>fpm</code> 如果你打算使用 NGINX。</li><li>MySQL <code>5.7.22</code> 及更高版本（推荐 MySQL <code>8</code>）<strong>或</strong> MariaDB <code>10.2</code> 及更高版本。</li><li>Redis (<code>redis-server</code>)</li><li>一个 Web 服务器（Apache、NGINX、Caddy 等）</li><li><code>curl</code></li><li><code>tar</code></li><li><code>unzip</code></li><li><code>git</code></li><li><code>composer</code> v2</li></ul><h3 id="依赖项安装示例" tabindex="-1"><a class="header-anchor" href="#依赖项安装示例"><span>依赖项安装示例</span></a></h3><p>下面的命令只是一个示例，说明如何安装这些依赖项。每个系统安装方式都不一样，请确定自己的操作系统来确定要安装的软件包是否正确。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 添加 &quot;add-apt-repository&quot; 命令</span></span>
<span class="line"><span class="token function">apt</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> software-properties-common <span class="token function">curl</span> apt-transport-https ca-certificates gnupg</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 为 PHP、Redis 和 MariaDB 添加额外的存储库</span></span>
<span class="line"><span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>C.UTF-8 add-apt-repository <span class="token parameter variable">-y</span> ppa:ondrej/php</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 添加 Redis 官方 APT 仓库</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://packages.redis.io/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /usr/share/keyrings/redis-archive-keyring.gpg</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> main&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/redis.list</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在 Ubuntu 22.04 上可以跳过 MariaDB 存储库设置脚本</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://downloads.mariadb.com/MariaDB/mariadb_repo_setup <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新存储库列表</span></span>
<span class="line"><span class="token function">apt</span> update</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装依赖项</span></span>
<span class="line"><span class="token function">apt</span> <span class="token parameter variable">-y</span> <span class="token function">install</span> php8.1 php8.1-<span class="token punctuation">{</span>common,cli,gd,mysql,mbstring,bcmath,xml,fpm,curl,zip<span class="token punctuation">}</span> mariadb-server nginx <span class="token function">tar</span> <span class="token function">unzip</span> <span class="token function">git</span> redis-server</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-composer" tabindex="-1"><a class="header-anchor" href="#安装-composer"><span>安装 Composer</span></a></h3><p>Composer 是一个 PHP 依赖管理器（类似于 Node.js 的 npm，或者 Python 的 pip）。<br> Composer 将会拉取你的项目所依赖的所有 PHP 软件包，并且为你管理它们。它被所有现代化的 PHP 框架和平台所使用，例如： Laravel, Symfony, Drupal, 和 Magento 2。 而翼龙面板前端正是使用的 Laravel ！</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://getcomposer.org/installer <span class="token operator">|</span> <span class="token function">sudo</span> php -- --install-dir<span class="token operator">=</span>/usr/local/bin <span class="token parameter variable">--filename</span><span class="token operator">=</span>composer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="下载文件" tabindex="-1"><a class="header-anchor" href="#下载文件"><span>下载文件</span></a></h2><p>在进行此步骤之前，我们要为面板前端创建它的工作目录。<br> 此过程的第一步是创建面板所在的文件夹，然后进入新创建的文件夹中。以下是如何执行此操作的示例。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>以下命令使用的路径仅为示例，阁下大可自己自定义路径，但是我在此提醒您，若您不用我示例使用的路径，请务必记住自己设置的程序所在的目录，并在后续各种涉及到程序运行目录的地方灵活操作！</p></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/pterodactyl</span>
<span class="line"><span class="token builtin class-name">cd</span> /var/www/pterodactyl</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在为面板创建好它的工作目录后，我们将使用 <code>curl</code> 命令，从 Github 拉取翼龙中国汉化完成的程序文件压缩包，拉取完成后，我们需要对压缩包进行解压操作，并赋予 <code>storage/</code> 与 <code>bootstrap/cache/</code> 目录 755 权限。这两个目录作用是缓存动态资源以加速访问。</p>`,21),h=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"curl"),s(),a("span",{class:"token parameter variable"},"-Lo"),s(" panel.tar.gz https://github.com/pterodactyl-china/panel/releases/latest/download/panel.tar.gz")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token comment"},"# 解压并设置目录权限")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token function"},"tar"),s(),a("span",{class:"token parameter variable"},"-xzvf"),s(" panel.tar.gz")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token function"},"chmod"),s(),a("span",{class:"token parameter variable"},"-R"),s(),a("span",{class:"token number"},"755"),s(" storage/* bootstrap/cache/")]),s(`
`),a("span",{class:"line"})])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),b=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"curl"),s(),a("span",{class:"token parameter variable"},"-Lo"),s(" panel.tar.gz https://mirror.ghproxy.com/https://github.com/pterodactyl-china/panel/releases/latest/download/panel.tar.gz")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token comment"},"# 解压并设置目录权限")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token function"},"tar"),s(),a("span",{class:"token parameter variable"},"-xzvf"),s(" panel.tar.gz")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token function"},"chmod"),s(),a("span",{class:"token parameter variable"},"-R"),s(),a("span",{class:"token number"},"755"),s(" storage/* bootstrap/cache/")]),s(`
`),a("span",{class:"line"})])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),g=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装"},[a("span",null,"安装")])],-1),k=a("p",null,"假设阁下已经完成之前的步骤且现在所有文件都已下载，接下来我们需进行配置面板的一些核心部分。",-1),y={class:"hint-container tip"},f=a("p",{class:"hint-container-title"},"数据库配置",-1),w=i(`<div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line">mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 记得把下面的 &#39;yourPassword&#39; 改成阁下自己想设置的密码</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;pterodactyl&#39;</span><span class="token variable">@&#39;127.0.0.1&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;yourPassword&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> panel<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> panel<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;pterodactyl&#39;</span><span class="token variable">@&#39;127.0.0.1&#39;</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">exit</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x=i(`<p>首先，我们将复制我们的默认环境设置文件 <code>.env</code> ，并使用 <code>Composer</code> 安装核心依赖项，然后生成新的应用程序加密密钥。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"><span class="token function">composer</span> <span class="token function">install</span> --no-dev --optimize-autoloader</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 注意，以下指令仅针对于第一次安装部署翼龙面板前端</span></span>
<span class="line"><span class="token comment"># 且对应数据库内无数据时执行，若阁下并非第一次安装且数据库内有数据，请忽略以下指令</span></span>
<span class="line">php artisan key:generate <span class="token parameter variable">--force</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>请备份您的加密密钥（<code>.env</code> 文件中的 <code>APP_KEY</code>）！ 它用作所有需要安全存储的数据的加密密钥（例如 api 密钥）。 请将其存储在安全的地方！ 如果您丢失它，所有加密数据都将无法恢复！即使您有数据库备份也无济于事！！！</p></div><h3 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置"><span>环境配置</span></a></h3><p>翼龙的核心环境可以使用应用程序中内置的几个不同的 CLI 命令进行更轻松的配置。此步骤将涵盖设置诸如会话、缓存、数据库凭证和电子邮件发送之类的内容。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan p:environment:setup</span>
<span class="line">php artisan p:environment:database</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 若使用 PHP 自带的 mail 拓展 (不推荐使用), 请在执行以下指令后选择 &quot;mail&quot;。</span></span>
<span class="line"><span class="token comment"># 若使用自定义 SMTP 服务器，请在执行以下指令后选择 &quot;smtp&quot;。</span></span>
<span class="line">php artisan p:environment:mail</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据库设置" tabindex="-1"><a class="header-anchor" href="#数据库设置"><span>数据库设置</span></a></h3><p>现在我们要将面板所有的核心数据写入我们之前为面板准备的数据库内。<br><strong>此步骤可能花费较长时间来进行执行，花费的时间取决于您的主机性能，主机与数据库主机的网络连接状态等因素。请耐心等待数据导入完成，切勿中途使用 CTRL+C 强制中断执行！</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan migrate <span class="token parameter variable">--seed</span> <span class="token parameter variable">--force</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加首位用户" tabindex="-1"><a class="header-anchor" href="#添加首位用户"><span>添加首位用户</span></a></h3><p>数据库配置完成后，您需要为面板创建一个管理用户，以便您可以登录面板。 为此，请运行以下命令。 并保证账户密码满足以下要求：8 个字符，大小写混合，至少一个数字。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">php artisan p:user:make</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="为-web-程序用户设置权限" tabindex="-1"><a class="header-anchor" href="#为-web-程序用户设置权限"><span>为 WEB 程序用户设置权限</span></a></h3><p>安装过程的最后一步是对 面板程序文件设置正确的权限，以便 WEB 服务器程序（例如Nginx 或者 Apache）可以正确执行文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 如果使用 NGINX 或 Apache (不在 CentOS 上)</span></span>
<span class="line"><span class="token function">chown</span> <span class="token parameter variable">-R</span> www-data:www-data /var/www/pterodactyl/*</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果在 CentOS 上使用 NGINX</span></span>
<span class="line"><span class="token function">chown</span> <span class="token parameter variable">-R</span> nginx:nginx /var/www/pterodactyl/*</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果在 CentOS 上使用 Apache</span></span>
<span class="line"><span class="token function">chown</span> <span class="token parameter variable">-R</span> apache:apache /var/www/pterodactyl/*</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注册队列监听服务" tabindex="-1"><a class="header-anchor" href="#注册队列监听服务"><span>注册队列监听服务</span></a></h2><p>我们使用队列来使应用程序更快，并在后台处理发送电子邮件和其他操作。您需要设置工作队列以处理这些操作。</p><h3 id="crontab-定时任务设置" tabindex="-1"><a class="header-anchor" href="#crontab-定时任务设置"><span>Crontab 定时任务设置</span></a></h3><p>我们需要做的第一件事是创建一个新的定时任务，它每分钟运行一次以处理特定的翼龙任务，例如会话清理和将计划任务发送到守护进程。您需要使用 <code>sudo crontab -e</code> 打开您的 crontab，然后粘贴下面的一行内容，不要忘记<code>/var/www/pterodactyl/</code>指的是你的翼龙面板在你服务器的绝对位置。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">* * * * * php /var/www/pterodactyl/artisan schedule:run <span class="token operator">&gt;&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建队列监听服务" tabindex="-1"><a class="header-anchor" href="#创建队列监听服务"><span>创建队列监听服务</span></a></h3><p>接下来，您需要创建一个新的 systemd 工作线程来保持我们的队列进程在后台运行。该队列负责发送电子邮件并为翼龙处理许多其他后台任务。</p><p>在 <code>/etc/systemd/system</code> 文件夹中创建一个名为 <code>pteroq.service</code> 的文件，其内容如下。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line"># 翼龙工作队列文件</span>
<span class="line"># ----------------------------------</span>
<span class="line"></span>
<span class="line">[Unit]</span>
<span class="line">Description=Pterodactyl Queue Worker</span>
<span class="line">After=redis-server.service</span>
<span class="line"></span>
<span class="line">[Service]</span>
<span class="line"># 在某些系统上用户和组可能不同。</span>
<span class="line"># 有些系统使用 \`apache\` 或 \`nginx\` 作为用户和组。</span>
<span class="line">User=www-data</span>
<span class="line">Group=www-data</span>
<span class="line">Restart=always</span>
<span class="line">ExecStart=/usr/bin/php /var/www/pterodactyl/artisan queue:work --queue=high,standard,low --sleep=3 --tries=3</span>
<span class="line">StartLimitInterval=180</span>
<span class="line">StartLimitBurst=30</span>
<span class="line">RestartSec=5s</span>
<span class="line"></span>
<span class="line">[Install]</span>
<span class="line">WantedBy=multi-user.target</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">CentOS 上的 Redis</p><p>如果您使用的是 CentOS，则需要在 <code>After=</code> 一行将 <code>redis-server.service</code> 替换为 <code>redis.service</code>，以确保 <code>redis</code> 在工作队列之前启动。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果你没有使用 <code>redis</code> 做任何事情，你应该删除 <code>After=</code> 一行，否则服务启动时会遇到错误。</p></div><p>如果您在系统中使用 redis，则需要确保启用它会在引导时启动。您可以通过运行以下命令来执行此操作：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> redis-server</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，启用该服务并将其设置为在计算机启动时启动。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> pteroq.service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="遥测" tabindex="-1"><a class="header-anchor" href="#遥测"><span>遥测</span></a></h3>`,31),_=a("h4",{id:"下一步-网络服务器配置",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#下一步-网络服务器配置"},[a("span",null,[s("下一步："),a("a",{href:"./webserver_configuration"},"网络服务器配置")])])],-1);function S(P,A){const r=p("Tabs"),c=p("RouteLink");return m(),d("div",null,[v,t(r,{id:"208",data:[{id:"国际源"},{id:"国内源"}],active:1,"tab-id":"fruit"},{title0:n(({value:e,isActive:l})=>[s("国际源")]),title1:n(({value:e,isActive:l})=>[s("国内源")]),tab0:n(({value:e,isActive:l})=>[h]),tab1:n(({value:e,isActive:l})=>[b]),_:1}),g,k,a("div",y,[f,a("p",null,[s("翼龙面板前端内的数据，例如：用户/用户账户下的服务器等。均需要 MYSQL 数据库进行存储。您将需要一个数据库设置和一个具有为该数据库创建正确权限的用户，然后才能继续进行。请参阅下文以快速为您的翼龙面板创建用户和数据库。要查找更多详细信息，请查看 "),t(c,{to:"/tutorials/mysql_setup.html"},{default:n(()=>[s("设置 MySQL")]),_:1}),s("。")]),w]),x,a("p",null,[s("从 1.11 开始，Pterodactyl 将收集匿名遥测数据，以帮助我们更好地了解软件的使用情况。要了解有关此功能的更多信息并拒绝此功能，请参阅我们的 "),t(c,{to:"/panel/1.0/additional_configuration.html#%E9%81%A5%E6%B5%8B"},{default:n(()=>[s("遥测")]),_:1}),s(" 文档。确保继续其余的安装过程。")]),_])}const L=o(u,[["render",S],["__file","getting_started.html.vue"]]),q=JSON.parse('{"path":"/panel/1.0/getting_started.html","title":"开始入门","lang":"zh-CN","frontmatter":{"description":"开始入门 翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。 您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件； 所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。 此面板不作为运行服务器的拖放服务存在。 这是一个高度复杂的系统，需要多个...","head":[["meta",{"property":"og:url","content":"https://pterodactyl.top/panel/1.0/getting_started.html"}],["meta",{"property":"og:site_name","content":"Pterodactyl-China"}],["meta",{"property":"og:title","content":"开始入门"}],["meta",{"property":"og:description","content":"开始入门 翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。 您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件； 所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。 此面板不作为运行服务器的拖放服务存在。 这是一个高度复杂的系统，需要多个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-17T00:57:54.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-17T00:57:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开始入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-17T00:57:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"选择服务器操作系统","slug":"选择服务器操作系统","link":"#选择服务器操作系统","children":[]},{"level":2,"title":"依赖项","slug":"依赖项","link":"#依赖项","children":[{"level":3,"title":"依赖项安装示例","slug":"依赖项安装示例","link":"#依赖项安装示例","children":[]},{"level":3,"title":"安装 Composer","slug":"安装-composer","link":"#安装-composer","children":[]}]},{"level":2,"title":"下载文件","slug":"下载文件","link":"#下载文件","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"环境配置","slug":"环境配置","link":"#环境配置","children":[]},{"level":3,"title":"数据库设置","slug":"数据库设置","link":"#数据库设置","children":[]},{"level":3,"title":"添加首位用户","slug":"添加首位用户","link":"#添加首位用户","children":[]},{"level":3,"title":"为 WEB 程序用户设置权限","slug":"为-web-程序用户设置权限","link":"#为-web-程序用户设置权限","children":[]}]},{"level":2,"title":"注册队列监听服务","slug":"注册队列监听服务","link":"#注册队列监听服务","children":[{"level":3,"title":"Crontab 定时任务设置","slug":"crontab-定时任务设置","link":"#crontab-定时任务设置","children":[]},{"level":3,"title":"创建队列监听服务","slug":"创建队列监听服务","link":"#创建队列监听服务","children":[]},{"level":3,"title":"遥测","slug":"遥测","link":"#遥测","children":[]}]}],"git":{"createdTime":1526780180000,"updatedTime":1713315474000,"contributors":[{"name":"Dane Everitt","email":"dane@daneeveritt.com","commits":29},{"name":"飒爽师叔","email":"43847794+vlssu@users.noreply.github.com","commits":27},{"name":"Matthew Penner","email":"me@matthewp.io","commits":5},{"name":"Quinten","email":"67589015+QuintenQVD0@users.noreply.github.com","commits":4},{"name":"Jakob Schrettenbrunner","email":"dev@schrej.net","commits":3},{"name":"Alex","email":"admin@softwarenoob.com","commits":2},{"name":"Charles Morgan","email":"sir3lit@gmail.com","commits":2},{"name":"ilworkcn","email":"1061372739@qq.com","commits":2},{"name":"Angel Knutsen Aune","email":"djangel@live.no","commits":1},{"name":"AreYouScared","email":"sir3lit@gmail.com","commits":1},{"name":"Boy132","email":"Boy132@users.noreply.github.com","commits":1},{"name":"DaneEveritt","email":"dane@daneeveritt.com","commits":1},{"name":"Ice-Ling","email":"iceling@ilwork.cn","commits":1},{"name":"Luis","email":"lvera@tecstim.com","commits":1},{"name":"Lukas","email":"31182042+m0uka@users.noreply.github.com","commits":1},{"name":"Mark David","email":"44349634+markd69@users.noreply.github.com","commits":1},{"name":"Omar Kamel","email":"30291302+TekExplorer@users.noreply.github.com","commits":1},{"name":"PadowYT2","email":"me@padow.ru","commits":1},{"name":"Simonmicro","email":"simon@simonmicro.de","commits":1},{"name":"Tealk","email":"12276250+Tealk@users.noreply.github.com","commits":1},{"name":"WISP.GG","email":"72014066+WISPdotGG@users.noreply.github.com","commits":1},{"name":"softwarenoob","email":"admin@softwarenoob.com","commits":1}]},"readingTime":{"minutes":8.61,"words":2582},"filePathRelative":"panel/1.0/getting_started.md","localizedDate":"2018年5月20日","autoDesc":true}');export{L as comp,q as data};
