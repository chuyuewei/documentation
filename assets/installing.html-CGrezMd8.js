import{_ as d}from"./wings_configuration_example-CiiF11xE.js";import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as m,b as i,w as a,a as e,e as n,d as o,o as u}from"./app-BvxVCiO8.js";const h="/assets/node_allocations-CiK6-M7C.png",g={},b=o(`<h1 id="安装-wings" tabindex="-1"><a class="header-anchor" href="#安装-wings"><span>安装 Wings</span></a></h1><p>Wings 是翼龙的下一代服务器管理平台。使用 Go 重构，并从我们的第一个 Node.js 守护进程中吸取了教训。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只有在运行 <strong>翼龙 1.x</strong> 时才应安装 Wings。不要为以前版本的翼龙安装此软件。</p></div><h2 id="支持的系统" tabindex="-1"><a class="header-anchor" href="#支持的系统"><span>支持的系统</span></a></h2><p>以下是支持的操作系统列表。请注意，这不是完整列表，您可能可以轻松地在其他 Linux 发行版上运行该软件。您需要确定这些系统上可能需要哪些软件包。以下受支持操作系统的新版本也很有可能正常工作，您在安装是包括但不限于以下列出的版本。</p><table><thead><tr><th>操作系统</th><th>版本</th><th style="text-align:center;">支持状况</th><th>注意事项</th></tr></thead><tbody><tr><td><strong>Ubuntu</strong></td><td>18.04</td><td style="text-align:center;">✅</td><td>文档基于 Ubuntu 18.04 作为操作系统所编写的。</td></tr><tr><td></td><td>20.04</td><td style="text-align:center;">✅</td><td></td></tr><tr><td></td><td>22.04</td><td style="text-align:center;">✅</td><td></td></tr><tr><td><strong>CentOS</strong></td><td>7</td><td style="text-align:center;">✅</td><td></td></tr><tr><td></td><td>8</td><td style="text-align:center;">✅</td><td>请注意，CentOS 8 已停运。使用 Rocky 或 Alma Linux.</td></tr><tr><td><strong>Debian</strong></td><td>11</td><td style="text-align:center;">✅</td><td></td></tr><tr><td></td><td>12</td><td style="text-align:center;">✅</td><td></td></tr><tr><td><strong>Windows</strong></td><td>All</td><td style="text-align:center;">❌</td><td>该软件将无法在 Windows 环境中运行。</td></tr></tbody></table><h2 id="系统要求" tabindex="-1"><a class="header-anchor" href="#系统要求"><span>系统要求</span></a></h2><p>要运行 Wings，您需要一个能够运行 Docker 镜像的 Linux 系统。大多数 VPS 和几乎所有专用服务器都应该能够运行 Docker，但也有一些极端情况。</p><p>当您的供应商使用 <code>Virtuozzo</code>、<code>OpenVZ</code>（或 <code>OVZ</code>）或 <code>LXC</code> 虚拟化时，您很可能无法运行 Wings。一些提供商已经对嵌套虚拟化进行了必要的更改以支持 Docker。请咨询您的提供商的支持团队。KVM 保证可以工作。</p><p>最简单的检查方法是输入 <code>systemd-detect-virt</code>。 如果结果不包含 <code>OpenVZ</code> 或 <code>LXC</code>，应该没问题。当运行没有任何虚拟化的专用硬件时，将出现 <code>none</code> 的结果。</p><p>如果由于某种原因不能正常工作，或者您仍然不确定，您也可以运行以下命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>dane@pterodactyl:~$ <span class="token function">sudo</span> dmidecode <span class="token parameter variable">-s</span> system-manufacturer
VMware, Inc.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="依赖项" tabindex="-1"><a class="header-anchor" href="#依赖项"><span>依赖项</span></a></h2><ul><li>curl</li><li>Docker</li></ul><h3 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker"><span>安装 Docker</span></a></h3><p>如需快速安装 Docker 社区版，您可以执行以下命令：</p>`,16),v=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),n(),e("span",{class:"token parameter variable"},"-sSL"),n(" https://get.docker.com/ "),e("span",{class:"token operator"},"|"),n(),e("span",{class:"token assign-left variable"},"CHANNEL"),e("span",{class:"token operator"},"="),n("stable "),e("span",{class:"token function"},"bash"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),k=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),n(),e("span",{class:"token parameter variable"},"-sSL"),n(" https://get.docker.com/ "),e("span",{class:"token operator"},"|"),n(),e("span",{class:"token assign-left variable"},"CHANNEL"),e("span",{class:"token operator"},"="),n("stable "),e("span",{class:"token function"},"bash"),n(),e("span",{class:"token parameter variable"},"-s"),n(),e("span",{class:"token function"},"docker"),n(),e("span",{class:"token parameter variable"},"--mirror"),n(` Aliyun
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),_=e("p",null,"如果您希望手动安装，请参考官方 Docker 文档了解如何在您的服务器上安装 Docker 社区版。下面列出了一些常用系统支持的快速链接。",-1),f=e("ul",null,[e("li",null,[e("a",{href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce",target:"_blank",rel:"noopener noreferrer"},"Ubuntu")]),e("li",null,[e("a",{href:"https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce",target:"_blank",rel:"noopener noreferrer"},"CentOS")]),e("li",null,[e("a",{href:"https://docs.docker.com/install/linux/docker-ce/debian/#install-docker-ce",target:"_blank",rel:"noopener noreferrer"},"Debian")])],-1),x={class:"hint-container warning"},y=e("p",{class:"hint-container-title"},"检查你的内核",-1),w=e("code",null,"uname -r",-1),L=e("code",null,"-xxxx-grs-ipv6-64",-1),W=e("code",null,"-xxxx-mod-std-ipv6-64",-1),D=o(`<h4 id="使-docker-开机自启动" tabindex="-1"><a class="header-anchor" href="#使-docker-开机自启动"><span>使 Docker 开机自启动</span></a></h4><p>如果您使用的是带有 systemd 的操作系统（Ubuntu 16+、Debian 8+、CentOS 7+），请运行以下命令以开机自启动 Docker。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="启用虚拟内存" tabindex="-1"><a class="header-anchor" href="#启用虚拟内存"><span>启用虚拟内存</span></a></h4><p>在大多数系统上，默认情况下 Docker 无法设置交换空间。您可以通过运行 <code>docker info</code> 并在底部附近查找 <code>WARNING: No swap limit support</code> 的输出来确认这一点。</p><p>启用虚拟内存是完全可选的，但如果您要为他人托管并防止出现 OOM 错误，我们建议您开启。</p><p>要启用虚拟内存，请以 root 用户身份打开 <code>/etc/default/grub</code> 并找到以 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 为开头的一行。确保该行在双引号内的某处包含 <code>swapaccount=1</code>。</p><p>之后，运行 <code>sudo update-grub</code> 然后运行 <code>sudo reboot</code> 重启服务器以启用虚拟内存。 下面是该行内容示例，<em>请勿逐字复制此行。 它通常具有其他特定于操作系统的参数。</em></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;swapaccount=1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">GRUB 配置</p><p>一些 Linux 发行版可能会忽略 <code>GRUB_CMDLINE_LINUX_DEFAULT</code>。因此，如果默认的不适合您，您可能不得不使用 <code>GRUB_CMDLINE_LINUX</code>。</p></div><h2 id="安装-wings-1" tabindex="-1"><a class="header-anchor" href="#安装-wings-1"><span>安装 Wings</span></a></h2><p>安装 Wings 的第一步是确保我们已经设置了所需的目录结构。为此，请运行以下命令，这将创建基本目录并下载 wings 可执行文件。</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>Wings 及配置文件路径，如果你不懂请不要尝试更改路径。（当然，你可以修改配置中的所有设置）<br> 并且 wings 文件和配置文件占用空间很低，在配置完设置后可以自行备份配置文件以防不测(如果真没了，那也是整个服务器没了吧...)。</p></div>`,13),S=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"mkdir"),n(),e("span",{class:"token parameter variable"},"-p"),n(` /etc/pterodactyl
`),e("span",{class:"token function"},"curl"),n(),e("span",{class:"token parameter variable"},"-L"),n(),e("span",{class:"token parameter variable"},"-o"),n(" /usr/local/bin/wings "),e("span",{class:"token string"},[n('"https://github.com/pterodactyl-china/wings/releases/latest/download/wings_linux_$([[ "'),e("span",{class:"token variable"},[e("span",{class:"token variable"},"$("),e("span",{class:"token function"},"uname"),n(),e("span",{class:"token parameter variable"},"-m"),e("span",{class:"token variable"},")")]),n('"')]),n(),e("span",{class:"token operator"},"=="),n(),e("span",{class:"token string"},'"x86_64"'),n(),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},"]"),n(),e("span",{class:"token operator"},"&&"),n(),e("span",{class:"token builtin class-name"},"echo"),n(),e("span",{class:"token string"},'"amd64"'),n(),e("span",{class:"token operator"},"||"),n(),e("span",{class:"token builtin class-name"},"echo"),n(),e("span",{class:"token string"},'"arm64"'),e("span",{class:"token punctuation"},")"),n(`"
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"chmod"),n(` u+x /usr/local/bin/wings
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"mkdir"),n(),e("span",{class:"token parameter variable"},"-p"),n(` /etc/pterodactyl
`),e("span",{class:"token function"},"curl"),n(),e("span",{class:"token parameter variable"},"-L"),n(),e("span",{class:"token parameter variable"},"-o"),n(" /usr/local/bin/wings "),e("span",{class:"token string"},[n('"https://mirror.ghproxy.com/https://github.com/pterodactyl-china/wings/releases/latest/download/wings_linux_$([[ "'),e("span",{class:"token variable"},[e("span",{class:"token variable"},"$("),e("span",{class:"token function"},"uname"),n(),e("span",{class:"token parameter variable"},"-m"),e("span",{class:"token variable"},")")]),n('"')]),n(),e("span",{class:"token operator"},"=="),n(),e("span",{class:"token string"},'"x86_64"'),n(),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},"]"),n(),e("span",{class:"token operator"},"&&"),n(),e("span",{class:"token builtin class-name"},"echo"),n(),e("span",{class:"token string"},'"amd64"'),n(),e("span",{class:"token operator"},"||"),n(),e("span",{class:"token builtin class-name"},"echo"),n(),e("span",{class:"token string"},'"arm64"'),e("span",{class:"token punctuation"},")"),n(`"
`),e("span",{class:"token function"},"sudo"),n(),e("span",{class:"token function"},"chmod"),n(` u+x /usr/local/bin/wings
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),A=o('<div class="hint-container warning"><p class="hint-container-title">OVH/SYS 服务器</p><p>如果您使用的是 OVH 或 SoYouStart 提供的服务器，请注意您的主驱动器空间可能分配给 <code>/home</code>，而不是默认分配给 <code>/</code>。 请考虑使用 <code>/home/daemon-data</code> 来存储服务器数据。在创建节点时可以轻松设置。</p></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p>安装 Wings 和所需组件后，下一步是在已安装的面板上创建一个节点。转到您的面板管理窗口，从侧边栏中选择节点，然后在右侧单击创建新按钮。</p><p>创建节点后，单击它，将出现一个名为“配置”的选项卡。复制代码块内容，将其粘贴到 <code>/etc/pterodactyl</code> 中的一个名为 <code>config.yml</code> 的新文件中并保存。</p><p>或者，您可以单击 “生成自动部署指令” 按钮，复制 bash 命令并将其粘贴到终端中。</p><figure><img src="'+d+'" alt="Wings 配置示例图片" tabindex="0" loading="lazy"><figcaption>Wings 配置示例图片</figcaption></figure>',6),C={class:"hint-container warning"},I=e("p",{class:"hint-container-title"},"注意",-1),U=o(`<h3 id="启动-wings" tabindex="-1"><a class="header-anchor" href="#启动-wings"><span>启动 Wings</span></a></h3><p>要启动 Wings，只需运行以下命令，它将以调试模式启动。一旦你确认它运行没有错误，使用 <code>CTRL+C</code> 来终止进程并按照下面的说明使用守护进程。根据您服务器的互联网连接，第一次拉取和启动 Wings 可能需要几分钟时间。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> wings <span class="token parameter variable">--debug</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>您可以选择添加 <code>--debug</code> 参数以在调试模式下运行 Wings。</p><h3 id="守护进程-使用-systemd" tabindex="-1"><a class="header-anchor" href="#守护进程-使用-systemd"><span>守护进程（使用 systemd）</span></a></h3><p>在后台运行 Wings 是一项简单的任务，只需在执行此操作之前确保它运行无误即可。将下面的内容放在 <code>/etc/systemd/system</code> 目录下的 <code>wings.service</code> 文件中。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[Unit]
Description=Pterodactyl Wings Daemon
After=docker.service
Requires=docker.service
PartOf=docker.service

[Service]
User=root
WorkingDirectory=/etc/pterodactyl
LimitNOFILE=4096
PIDFile=/var/run/wings/daemon.pid
ExecStart=/usr/local/bin/wings
Restart=on-failure
StartLimitInterval=180
StartLimitBurst=30
RestartSec=5s

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，运行以下命令重新加载 systemd 并启动 Wings。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> wings
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="节点分配" tabindex="-1"><a class="header-anchor" href="#节点分配"><span>节点分配</span></a></h3><p>分配是 IP 和端口的组合，您可以分配给服务器。 每个创建的服务器必须至少有一个分配。 分配将是您的网络接口的 IP 地址。 在某些情况下，例如在使用了 NAT 的情况下，它将是内部 IP。 要创建新分配，请转到节点 &gt; 您的节点 &gt; 分配。</p><figure><img src="`+h+'" alt="节点分配示例图" tabindex="0" loading="lazy"><figcaption>节点分配示例图</figcaption></figure><p>输入 <code>hostname -I | awk &#39;{print $1}&#39;</code> 查找要用于分配的 IP。或者，您可以输入 <code>ip addr | grep &quot;inet &quot;</code> 查看所有可用的接口和 IP 地址。不要使用 127.0.0.1 进行分配。</p>',13);function E(O,R){const l=r("Tabs"),c=r("RouteLink");return u(),m("div",null,[b,i(l,{id:"186",data:[{id:"国际源"},{id:"国内源"}],active:1,"tab-id":"fruit"},{title0:a(({value:s,isActive:t})=>[n("国际源")]),title1:a(({value:s,isActive:t})=>[n("国内源")]),tab0:a(({value:s,isActive:t})=>[v]),tab1:a(({value:s,isActive:t})=>[k]),_:1}),_,f,e("div",x,[y,e("p",null,[n("请注意，某些主机安装了不支持 docker 重要功能的修改内核。 请通过运行 "),w,n(" 检查您的内核。 如果您的内核以 "),L,n(" 或 "),W,n(" 结尾，您可能使用的是不受支持的内核。 查看我们的 "),i(c,{to:"/daemon/0.6/kernel_modifications.html"},{default:a(()=>[n("内核修改")]),_:1}),n(" 指南了解详细信息。")])]),D,i(l,{id:"258",data:[{id:"国际源"},{id:"国内源"}],active:1,"tab-id":"fruit"},{title0:a(({value:s,isActive:t})=>[n("国际源")]),title1:a(({value:s,isActive:t})=>[n("国内源")]),tab0:a(({value:s,isActive:t})=>[S]),tab1:a(({value:s,isActive:t})=>[N]),_:1}),A,e("div",C,[I,e("p",null,[n("当您的面板使用 SSL 时，Wings 节点就必须使用域名解析，并为其域名也创建一个 SSL。在继续之前，请参阅 "),i(c,{to:"/tutorials/creating_ssl_certificates.html"},{default:a(()=>[n("创建 SSL 证书")]),_:1}),n(" 文档页面了解如何创建这些证书。")])]),U])}const M=p(g,[["render",E],["__file","installing.html.vue"]]),P=JSON.parse('{"path":"/wings/1.0/installing.html","title":"安装 Wings","lang":"zh-CN","frontmatter":{"description":"安装 Wings Wings 是翼龙的下一代服务器管理平台。使用 Go 重构，并从我们的第一个 Node.js 守护进程中吸取了教训。 注意 只有在运行 翼龙 1.x 时才应安装 Wings。不要为以前版本的翼龙安装此软件。 支持的系统 以下是支持的操作系统列表。请注意，这不是完整列表，您可能可以轻松地在其他 Linux 发行版上运行该软件。您需要确定...","head":[["meta",{"property":"og:url","content":"https://pterodactyl.top/wings/1.0/installing.html"}],["meta",{"property":"og:site_name","content":"Pterodactyl-China"}],["meta",{"property":"og:title","content":"安装 Wings"}],["meta",{"property":"og:description","content":"安装 Wings Wings 是翼龙的下一代服务器管理平台。使用 Go 重构，并从我们的第一个 Node.js 守护进程中吸取了教训。 注意 只有在运行 翼龙 1.x 时才应安装 Wings。不要为以前版本的翼龙安装此软件。 支持的系统 以下是支持的操作系统列表。请注意，这不是完整列表，您可能可以轻松地在其他 Linux 发行版上运行该软件。您需要确定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-23T00:31:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-23T00:31:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装 Wings\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-23T00:31:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"支持的系统","slug":"支持的系统","link":"#支持的系统","children":[]},{"level":2,"title":"系统要求","slug":"系统要求","link":"#系统要求","children":[]},{"level":2,"title":"依赖项","slug":"依赖项","link":"#依赖项","children":[{"level":3,"title":"安装 Docker","slug":"安装-docker","link":"#安装-docker","children":[]}]},{"level":2,"title":"安装 Wings","slug":"安装-wings-1","link":"#安装-wings-1","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[{"level":3,"title":"启动 Wings","slug":"启动-wings","link":"#启动-wings","children":[]},{"level":3,"title":"守护进程（使用 systemd）","slug":"守护进程-使用-systemd","link":"#守护进程-使用-systemd","children":[]},{"level":3,"title":"节点分配","slug":"节点分配","link":"#节点分配","children":[]}]}],"git":{"createdTime":1532758053000,"updatedTime":1716424299000,"contributors":[{"name":"Dane Everitt","email":"dane@daneeveritt.com","commits":26},{"name":"飒爽师叔","email":"43847794+vlssu@users.noreply.github.com","commits":18},{"name":"Alex","email":"admin@softwarenoob.com","commits":5},{"name":"softwarenoob","email":"admin@softwarenoob.com","commits":3},{"name":"Quinten","email":"67589015+QuintenQVD0@users.noreply.github.com","commits":2},{"name":"Softwarenoob","email":"admin@softwarenoob.com","commits":2},{"name":"3856887","email":"53141427+3856887@users.noreply.github.com","commits":1},{"name":"Angel Knutsen Aune","email":"djangel@live.no","commits":1},{"name":"Aniket","email":"58530748+HandyHat@users.noreply.github.com","commits":1},{"name":"AreYouScared","email":"sir3lit@gmail.com","commits":1},{"name":"Boy132","email":"Boy132@users.noreply.github.com","commits":1},{"name":"Charles Morgan","email":"sir3lit@gmail.com","commits":1},{"name":"DaneEveritt","email":"dane@daneeveritt.com","commits":1},{"name":"Jakob","email":"dev@schrej.net","commits":1},{"name":"Jakob Schrettenbrunner","email":"dev@schrej.net","commits":1},{"name":"MaddDogg98","email":"jdmon1998@gmail.com","commits":1},{"name":"Mark David","email":"44349634+markd69@users.noreply.github.com","commits":1},{"name":"Simonmicro","email":"simon@simonmicro.de","commits":1},{"name":"Yannick Schinko","email":"yannick@tedworld.de","commits":1},{"name":"realkarmakun","email":"20980281+realkarmakun@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.19,"words":1856},"filePathRelative":"wings/1.0/installing.md","localizedDate":"2018年7月28日","autoDesc":true}');export{M as comp,P as data};
